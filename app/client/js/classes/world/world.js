/**
* Client-side copy of the world data. 
*
*/
var haveImages = false;

var world = new World();

function World() {
	this.armies  = {};
	this.cities  = {};
	this.battles = {};
	this.cols = 48;
	this.rows = 48;
	this.movingArmy = false;
	this.tileTypes = [];
	this.content = {};
	this.showingCoords = false;
	this.tileTypes = [
		[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
		[2,2,2,2,2,3,3,3,3,3,3,3,2,2,2,2,2,3,2,3,3,3,3,3,2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,3,2,3,2,2,2,2],
		[2,2,2,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2],
		[2,2,3,3,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2],
		[2,3,3,3,3,0,0,0,0,0,0,0,3,3,3,3,3,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,3,3,3,3,2],
		[2,3,3,3,0,0,0,6,0,6,0,6,0,0,3,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,6,0,0,6,0,0,0,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,0,0,0,6,0,0,6,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,6,0,6,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,0,6,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,6,0,6,0,6,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,5,0,5,0,0,0,0,0,0,6,6,0,6,0,7,0,7,0,0,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,7,7,0,7,0,7,0,7,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,7,7,7,7,7,7,0,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,6,0,6,0,6,0,0,0,0,0,3,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,7,7,7,0,7,0,0,0,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,6,0,0,0,0,3,3,0,3,3,6,0,6,0,0,0,0,5,5,5,5,5,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,3,3,3,2],
		[2,3,3,3,0,0,0,6,0,6,0,3,3,3,3,3,3,0,0,0,0,6,0,0,8,8,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2],
		[2,3,3,3,0,0,6,0,0,0,3,3,3,3,3,3,3,0,6,0,6,0,6,0,8,8,5,5,5,5,0,0,6,0,0,4,4,4,0,0,0,0,3,3,3,3,3,2],
		[2,3,3,3,0,0,0,0,0,0,3,3,3,3,3,3,6,0,0,6,0,6,0,0,8,8,8,5,5,5,0,6,0,4,4,4,4,0,0,0,0,3,3,3,3,3,3,2],
		[2,3,3,3,0,0,0,0,6,0,6,0,0,0,6,0,0,6,0,0,0,0,0,6,8,8,8,5,5,5,0,0,0,4,4,4,4,0,0,0,0,3,3,3,3,3,2,2],
		[2,3,3,3,0,0,0,0,0,0,0,0,6,0,0,6,0,0,0,6,6,6,0,0,6,8,8,5,5,5,0,6,4,4,4,4,0,0,0,0,0,3,3,3,3,2,2,2],
		[2,3,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,6,0,0,0,0,0,6,8,4,5,5,5,5,6,0,4,4,4,4,0,0,0,0,0,3,3,3,2,2,2,2],
		[2,3,3,3,3,0,0,0,0,0,0,6,4,4,4,4,4,4,6,4,6,4,0,4,4,4,0,5,0,0,0,0,0,4,4,0,0,0,0,0,0,3,3,2,2,2,2,2],
		[2,2,3,3,3,3,0,0,0,0,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,5,0,0,0,0,6,0,0,0,0,0,0,0,0,3,3,3,3,2,2,2,2,2],
		[2,2,3,3,3,3,0,0,0,0,5,5,5,5,5,5,4,5,4,4,4,4,4,5,5,5,0,8,8,6,6,0,0,0,0,0,0,0,3,3,3,2,2,3,3,3,2,2],
		[2,2,2,3,3,3,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,0,0,0,0,0,0,0,0,3,3,3,2,3,3,3,3,3,3,2],
		[2,2,3,3,3,3,0,0,0,0,6,0,0,0,5,0,5,7,5,5,5,8,5,8,8,8,8,8,6,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,3,3,3,2],
		[2,2,3,3,3,3,0,0,0,0,0,6,6,0,6,0,7,7,7,7,8,8,8,0,8,0,0,0,0,6,0,0,0,0,0,3,3,3,3,3,3,0,0,6,0,3,3,2],
		[2,3,3,3,3,0,0,0,0,6,0,0,0,6,0,7,7,7,7,8,8,8,0,6,0,3,6,3,0,3,3,3,3,3,3,3,3,3,3,3,6,0,0,0,6,3,3,2],
		[2,3,3,3,3,0,0,0,0,6,0,6,0,0,0,7,7,7,7,8,8,0,0,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,0,0,4,0,0,3,3,2],
		[2,3,3,3,3,0,0,0,0,0,0,0,6,0,6,7,7,7,7,8,8,6,0,0,3,3,3,0,3,0,6,6,0,0,3,3,2,3,3,0,0,4,4,0,0,3,3,2],
		[2,3,3,3,0,0,0,0,0,0,0,6,0,0,0,7,7,7,7,8,8,0,0,0,0,6,0,0,0,0,6,0,0,0,3,3,2,3,3,0,6,4,4,4,0,0,3,2],
		[2,3,3,3,0,0,0,0,0,0,0,0,0,6,0,6,7,7,7,8,8,8,6,0,6,0,0,0,6,0,0,8,0,0,3,3,2,3,3,0,6,6,4,4,4,7,2,2],
		[2,3,3,3,0,0,0,0,0,0,6,0,0,0,0,5,7,7,7,5,8,5,0,5,0,0,6,0,6,0,8,8,6,0,3,3,2,3,3,0,0,0,4,8,4,7,0,2],
		[2,3,3,3,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,0,8,8,8,0,0,3,3,3,3,3,0,0,6,0,8,7,5,0,2],
		[2,3,3,3,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,6,8,8,0,0,6,0,3,3,3,3,0,0,0,0,8,7,5,0,2],
		[2,3,3,3,0,0,0,6,0,5,5,5,5,5,5,5,5,5,5,0,5,0,5,0,0,6,0,0,8,8,8,0,6,0,0,3,3,3,0,6,0,0,6,8,7,5,0,2],
		[2,3,3,3,0,0,0,0,0,8,5,8,5,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,8,0,6,0,0,3,3,3,3,0,0,0,0,0,8,7,5,0,2],
		[2,3,3,3,0,0,0,6,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,8,8,0,0,0,0,3,3,3,3,0,0,0,6,8,8,7,7,5,0,2],
		[2,3,3,3,0,6,0,0,0,4,8,8,0,6,0,0,0,0,0,0,0,6,0,6,0,8,8,8,8,0,0,3,3,3,3,3,0,0,0,8,8,7,7,5,5,5,0,2],
		[2,3,3,3,6,6,0,4,4,4,4,8,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,6,3,3,3,3,3,3,3,0,6,8,7,7,5,5,5,5,0,2],
		[2,3,3,3,4,4,4,4,4,4,4,4,6,0,0,0,0,0,0,0,6,0,0,8,8,8,8,6,0,6,3,3,3,3,3,0,6,0,8,8,7,7,7,5,5,5,0,2],
		[2,3,3,3,4,4,4,4,4,4,4,4,6,0,0,0,0,0,0,0,0,6,0,0,8,0,0,0,0,0,3,3,3,3,0,0,0,8,8,6,6,0,7,7,5,5,0,2],
		[2,3,3,3,0,0,4,0,4,0,4,0,0,0,0,3,3,3,3,3,3,3,0,6,0,0,0,6,0,0,3,3,3,3,0,6,4,4,4,0,0,0,6,7,7,5,0,2],
		[2,3,3,3,6,0,0,0,0,6,0,0,6,0,0,3,3,3,3,3,3,3,0,0,6,6,0,0,0,0,3,3,3,3,0,0,4,6,0,3,3,6,0,0,7,5,0,2],
		[2,3,3,3,6,0,6,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,3,3,6,0,0,7,0,0,2],
		[2,3,3,3,3,3,0,3,0,3,0,3,0,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,0,0,0,0,2,2],
		[2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,2,2,2],
		[2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,3,2,3,2,3,2,2,2,3,3,3,3,3,3,3,2,3,3,3,3,3,2,2,2],
		[2,2,2,2,2,2,3,2,3,2,3,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2],
		[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]];
}

World.prototype.addCity = function(city) {
	var geometry = assets.geometries['city'];//new THREE.SphereGeometry( 6, 4, 4 );
	var material = new THREE.MeshLambertMaterial( { color: 0x222222 } );
	var cityMesh = new THREE.Mesh( geometry, material );
	cityMesh.position = positionOfTile(city.tileId);
	cityMesh.scale.set(7,7,7);
	cityMesh.rotation.y = (3.1415 /2);
	cityMesh.name = city.name;
	cityMesh.user = city.user;
	cityMesh.id = city.id;
	cityMesh.tileId = city.tileId;

	scene.add(cityMesh);
	world.cities[city.id] = cityMesh;

	var spritey = makeTextSprite( city.name, 
		{ fontsize: 18, borderColor: {r:0, g:0, b:255, a:1.0}, backgroundColor: {r:100, g:100, b:255, a:0.8} } );
	spritey.position = cityMesh.position;
	// spritey.position.y = 30;
	scene.add( spritey );
		
	if ( world.content[city.tileId] ) {
		world.content[city.tileId]['city'] = city.id;
	} else {
		world.content[city.tileId] = {'city': city.id};
	}
}

World.prototype.addArmy = function(army) {
	world.armies[army.id] = new Army(
		army.id,
		army.tileId,
		army.user,
		army.soldiers,
		army.calvary);
	scene.add(world.armies[army.id].mesh);
	world.content[army.tileId] = {'army': army.id};
	if (world.content[army.tileId]) {
		world.content[army.tileId]['army'] = army.id;
	} else {
		world.content[army.tileId] = {'army': army.id};
	}
}

World.prototype.toggleMovingArmy = function() {
	console.log(this);
	if (this.movingArmy) {
		this.movingArmy = null;
	} else if (!selectedTile)
		alert('Please select a tile with an army.');
 	else if(!this.content[selectedTile.tileId] || !this.content[selectedTile.tileId].army)
 		alert('Please select a tile with an army.');
 	else {
 		var army = this.armies[this.content[selectedTile.tileId].army];
	 	this.movingArmy = army;
	 }
}

World.prototype.isAdjacent = function(tileIdA, tileIdB) {
  return (this.getAdjacentTiles(tileIdA).indexOf(tileIdB) >= 0);
}

World.prototype.getAdjacentTiles = function(tileId) {
  var idArr = [];
  if (tileId % this.cols > 0) idArr.push(tileId-1);
  if (tileId % this.cols < this.cols-1) idArr.push(tileId+1);

  var row = Math.floor(tileId/this.cols);
  idArr.push(tileId-this.cols);
  idArr.push(tileId+this.cols);


  if ( row%2 == 0 ) {
    idArr.push(tileId-this.cols-1);
    idArr.push(tileId+this.cols-1);

  } else {
    idArr.push(tileId-this.cols+1);
    idArr.push(tileId+this.cols+1);
  }
  return idArr;
}